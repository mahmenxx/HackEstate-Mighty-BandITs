@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>EvenTahan Register</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

    <style>
        body {
            background: #f8f9fa;
            font-family: 'Segoe UI', sans-serif;
        }

        .register-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .register-box {
            background: white;
            padding: 2.5rem;
            border-radius: 1rem;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 700px;
        }

        .register-title {
            color: #38a47a;
            font-weight: 700;
            text-align: center;
            margin-bottom: 2rem;
            font-size: 1.8rem;
        }

        .btn-primary {
            background-color: #38a47a;
            border-color: #38a47a;
        }

            .btn-primary:hover {
                background-color: #45b85c;
                border-color: #45b85c;
            }

        .form-control:focus {
            border-color: #38a47a;
            box-shadow: 0 0 0 0.2rem rgba(80, 203, 103, 0.25);
        }

        #map {
            width: 100%;
            height: 300px;
            margin-top: 1rem;
            border-radius: 0.5rem;
        }
    </style>
</head>
<body>
    <div class="register-container">
        <div class="register-box">
            <div class="register-title">EvenTahan Register</div>
            <form method="post" action="/Account/Register">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">First Name</label>
                        <input type="text" class="form-control" name="FirstName" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Last Name</label>
                        <input type="text" class="form-control" name="LastName" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" name="Email" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Username</label>
                        <input type="text" class="form-control" name="Username" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Role</label>
                        <select class="form-select" name="Role" required>
                            <option selected disabled value="">Choose...</option>
                            <option value="1">Agent</option>
                            <option value="2">Buyer</option>
                            <option value="3">Seller</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Contact No.</label>
                        <input type="tel" class="form-control" name="ContactNo" required />
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Password</label>
                        <input type="password" class="form-control" name="Password" required />
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Address</label>
                        <input type="text" class="form-control" name="Address" id="address" readonly />
                        <button type="button" onclick="getLocation()" class="btn btn-outline-success mt-2 btn-sm">Use Current Location</button>
                        <div id="map"></div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary w-100 mt-4">Register</button>
                <p class="mt-3 text-center small">
                    Already have an account? <a href="/Account/Login" class="text-decoration-none" style="color: #38a47a;">Login here</a>
                </p>
            </form>
        </div>
    </div>

    <
    <script>
        const GOOGLE_MAPS_API_KEY = 'AIzaSyASwYoSfheLmZpLoq1f6Fi_-wWhjoBb3jw';
        let map, marker;

        function initMap() {
            const fallbackLocation = { lat: 14.5995, lng: 120.9842 }; // Manila

            map = new google.maps.Map(document.getElementById("map"), {
                center: fallbackLocation,
                zoom: 12
            });

            marker = new google.maps.Marker({
                position: fallbackLocation,
                map: map,
                draggable: false
            });

            // Set initial address
            updateAddress(fallbackLocation.lat, fallbackLocation.lng);

            // When user clicks on map
            map.addListener("click", (e) => {
                const lat = e.latLng.lat();
                const lng = e.latLng.lng();
                const position = { lat, lng };
                marker.setPosition(position);
                updateAddress(lat, lng);
            });
        }

        function updateAddress(lat, lng) {
            const addressInput = document.getElementById("address");
            const latlng = `${lat},${lng}`;

            fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latlng}&key=${GOOGLE_MAPS_API_KEY}`)
                .then(response => response.json())
                .then(data => {
                    const address = data.results[0]?.formatted_address || "Unable to retrieve address";
                    addressInput.value = address;
                })
                .catch(() => alert("Failed to fetch address."));
        }

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    const lat = position.coords.latitude;
                    const lng = position.coords.longitude;
                    const pos = { lat, lng };

                    map.setCenter(pos);
                    marker.setPosition(pos);
                    updateAddress(lat, lng);
                }, showError);
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        function showError(error) {
            alert("Location access denied or unavailable.");
        }
    </script>

    <script async
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyASwYoSfheLmZpLoq1f6Fi_-wWhjoBb3jw&callback=initMap">
    </script>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
