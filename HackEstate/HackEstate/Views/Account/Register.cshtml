@{
    Layout = "/Views/Shared/_AccountLayout.cshtml";
}
<div class="register-container">
    <div class="register-box">
        <img src="/Logo.png" alt="EvenTahan Logo" class="login-logo img-fluid" />
        <div class="register-title">Register</div>
        <form method="post" action="/Account/Register">
            <div class="row g-3">
                <div class="col-md-6 form-group">
                    <label class="form-label">First Name</label>
                    <i class="fas fa-user"></i>
                    <input type="text" class="form-control" name="FirstName" required />
                </div>
                <div class="col-md-6 form-group">
                    <label class="form-label">Last Name</label>
                    <i class="fas fa-user"></i>
                    <input type="text" class="form-control" name="LastName" required />
                </div>
                <div class="col-md-6 form-group">
                    <label class="form-label">Email</label>
                    <i class="fas fa-envelope"></i>
                    <input type="email" class="form-control" name="Email" required />
                </div>
                <div class="col-md-6 form-group">
                    <label class="form-label">Username</label>
                    <i class="fas fa-user-tag"></i>
                    <input type="text" class="form-control" name="Username" required />
                </div>
                <div class="col-md-6 form-group">
                    <label class="form-label">Role</label>
                    <i class="fas fa-briefcase"></i>
                    <select class="form-select" name="Role" required>
                        <option selected disabled value="">Choose...</option>
                        <option value="1">Agent</option>
                        <option value="2">Buyer</option>
                        <option value="3">Seller</option>
                    </select>
                </div>
                <div class="col-md-6 form-group">
                    <label class="form-label">Contact No.</label>
                    <i class="fas fa-phone"></i>
                    <input type="tel" class="form-control" name="ContactNo" required />
                </div>
                <div class="col-md-12 form-group">
                    <label class="form-label">Password</label>
                    <i class="fas fa-lock"></i>
                    <input type="password" class="form-control" name="Password" required />
                </div>
                <div class="col-md-12 form-group">
                    <label class="form-label">Address</label>
                    <i class="fas fa-user"></i>
                    <input type="text" class="form-control" name="Address" id="address" readonly />
                    <button type="button" onclick="getLocation()" class="btn btn-outline-success mt-2 btn-sm">Use Current Location</button>
                    <div id="map"></div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary w-100 mt-4">Register</button>
            <p class="mt-3 text-center small">
                Already have an account? <a href="/Account/Login" class="text-decoration-none" style="color: #38a47a;">Login here</a>
            </p>
        </form>
    </div>
</div>

    <
<script>
    const GOOGLE_MAPS_API_KEY = 'AIzaSyASwYoSfheLmZpLoq1f6Fi_-wWhjoBb3jw';
    let map, marker;

    function initMap() {
        const fallbackLocation = { lat: 14.5995, lng: 120.9842 }; // Manila

        map = new google.maps.Map(document.getElementById("map"), {
            center: fallbackLocation,
            zoom: 12
        });

        marker = new google.maps.Marker({
            position: fallbackLocation,
            map: map,
            draggable: false
        });

        // Set initial address
        updateAddress(fallbackLocation.lat, fallbackLocation.lng);

        // When user clicks on map
        map.addListener("click", (e) => {
            const lat = e.latLng.lat();
            const lng = e.latLng.lng();
            const position = { lat, lng };
            marker.setPosition(position);
            updateAddress(lat, lng);
        });
    }

    function updateAddress(lat, lng) {
        const addressInput = document.getElementById("address");
        const latlng = `${lat},${lng}`;

        fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latlng}&key=${GOOGLE_MAPS_API_KEY}`)
            .then(response => response.json())
            .then(data => {
                const address = data.results[0]?.formatted_address || "Unable to retrieve address";
                addressInput.value = address;
            })
            .catch(() => alert("Failed to fetch address."));
    }

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position) => {
                const lat = position.coords.latitude;
                const lng = position.coords.longitude;
                const pos = { lat, lng };

                map.setCenter(pos);
                marker.setPosition(pos);
                updateAddress(lat, lng);
            }, showError);
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    function showError(error) {
        alert("Location access denied or unavailable.");
    }
</script>

<script async
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyASwYoSfheLmZpLoq1f6Fi_-wWhjoBb3jw&callback=initMap">
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
